version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: secure_app_db
    environment:
      POSTGRES_DB: secure_app
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secure_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - secure_network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: secure_app_backend
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: secure_app
      DB_USER: admin
      DB_PASSWORD: secure_password_2024
      JWT_SECRET: your_jwt_secret_key_here_2024
      PORT: 5000
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/certificates:/app/certificates
    depends_on:
      - postgres
    networks:
      - secure_network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: secure_app_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - secure_network

  # Redis for session management (optional)
  redis:
    image: redis:7-alpine
    container_name: secure_app_redis
    ports:
      - "6379:6379"
    networks:
      - secure_network

volumes:
  postgres_data:

networks:
  secure_network:
    driver: bridge
